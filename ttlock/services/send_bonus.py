import base64
import json
import uuid
from datetime import datetime
from pprint import pprint

from django.conf import settings
from requests import Session

from ttlock.services.chat2deck_service import send_message_by_phone

MESSAGE_TEXT = """üéÅ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {points} UDS
–ò—Ç–æ–≥–æ UDS: {all_points}
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—É –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ!"""

UNDEFINED_USER_MESSAGE = """üì• *–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ* https://okey.uds.app/c –∏ –∫–æ–ø–∏—Ç–µ –±–∞–ª–ª—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –æ–ø–ª–∞—Ç—ã! –û–±–º–µ–Ω–∏–≤–∞–π—Ç–µ –∏—Ö –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –∫–ª—É–±—ã –∏ –¥—Ä—É–≥–∏–µ –∑–∞–Ω—è—Ç–∏—è –∏–∑ "–ü—Ä–∞–∫—Ç–∏–∫—É–º–∞"!

üéÅ –ü–æ–ª—É—á–∏—Ç–µ 4000 –±–∞–ª–ª–æ–≤ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!"""


def add_points_user(money: int, client_phone: int):
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ UDS
    error = ""
    s = Session()
    api_key = str(f"{settings.UDS_COMPANY_ID}:{settings.UDS_API_KEY}")
    auth_string = base64.b64encode(api_key.encode('utf-8'))
    response = s.request(
        method='GET',
        url=f'{settings.UDS_API_URL}customers/find?code=456123&phone=%2b{client_phone}',
        headers={
            'Accept': 'application/json',
            'Accept-Charset': 'utf-8',
            'Authorization': 'Basic ' + auth_string.decode("utf-8"),
            'X-Origin-Request-Id': str(uuid.uuid4()),
            'X-Timestamp': datetime.now().isoformat(),
        })
    if response.status_code == 404:
        send_message_by_phone(client_phone, UNDEFINED_USER_MESSAGE)
        return error, response.status_code, response.text
    if response.status_code != 200:
        return error, response.status_code, response.text
    try:
        response_json = response.json()
        participant = response_json['user']['participant']
        user_id = participant['id']
        rate = participant["membershipTier"]["rate"]
        points = int(float(money) / 100 * rate)
        all_points = int(float(participant["points"]) + points)

        response = s.request(
            method='POST',
            url=f'{settings.UDS_API_URL}operations/reward',
            headers={
                'Accept': 'application/json',
                'Accept-Charset': 'utf-8',
                'Content-Type': 'application/json',
                'Authorization': 'Basic ' + auth_string.decode("utf-8"),
                'X-Origin-Request-Id': str(uuid.uuid4()),
                'X-Timestamp': datetime.now().isoformat(),
            },
            data=json.dumps({
                'participants': [user_id, ],
                'points': points
            }),
        )
        if response.status_code == 202:
            send_message_by_phone(client_phone, MESSAGE_TEXT.format(points=points, all_points=all_points))
    except Exception as e:
        print(e)
        pass
    return error, response.status_code, response.text
